#ifndef RichTbMaterialParameters_h
#define RichTbMaterialParameters_h
#include <cmath>
#include "CLHEP/Units/PhysicalConstants.h"


#include "globals.hh"
#include "RichTbGeometryParameters.hh"
//#include "RichTbAnalysisManager.hh"
#include "RichTbRunConfig.hh"
#include "RichTbMiscNames.hh"
#include "LayerTecMaterialParameters.hh"
#include "PolymerPlusMaterialParameters.hh"



extern void InitializeRichTbMaterial();
extern void  HistoRichMaterialProperty();
extern std::vector<G4double> InitN2RefPhotMom();
extern std::vector<G4double> Initc4f10RefPhotMom();
extern G4double  N2RefIndexAtAnEnergy(G4double,G4double,G4double);
extern std::vector<G4double> InitN2RefIndex(G4double, G4double);
extern std::vector<G4double> Initc4f10RefIndex(G4double, G4double);
extern G4double  c4f10RefIndexAtAnEnergy(G4double,G4double,G4double);
extern std::vector<G4double> InitializePhotonMomentumVector();
extern std::vector<G4double>  InitializePMTWaveL(G4int);
extern std::vector<G4double> InitializePMTQE(G4int);
extern std::vector<G4double> InitializeLHCbTypPMTQE();

extern G4double  FresnelLossAtNormalIncidence(G4double,G4double);

extern std::vector<G4double>  InitializeHpdWaveL(G4int);
extern std::vector<G4double> InitializeHpdQE(G4int);


static const G4double PhotMomWaveConv = 1243.125;
static const G4double PhotMomToWaveLength =  PhotMomWaveConv*( CLHEP::nanometer*CLHEP::eV);
static const G4double PhotWaveLengthToMom = PhotMomWaveConv*(CLHEP::eV*CLHEP::nanometer);

// Limits of Photon Energy  and number of bins for the
// Photon energy range.
static const G4double PhotonMinEnergy = 1.3 * CLHEP::eV;
//static const G4double PhotonMinEnergy = 0.5 * CLHEP::eV;
//static const G4double PhotonMaxEnergy = 7.5 * CLHEP::eV;
static const G4double PhotonMaxEnergy = 6.5 *  CLHEP::eV;
//static const G4int NumPhotWaveLengthBins = 1000;
static const G4int NumPhotWaveLengthBins = 50;



const G4double PhotEnerStep = (PhotonMaxEnergy -PhotonMinEnergy)/
		(NumPhotWaveLengthBins);
const G4int PhotEnerBinEdgeForSafety=2;
//const G4int PhotEnerBinEdgeForSafety=20;
const G4double PhotonCkvProdMinEnergy =
		PhotonMinEnergy+ PhotEnerBinEdgeForSafety*PhotEnerStep;
const G4double PhotonCkvProdMaxEnergy =
		PhotonMaxEnergy-PhotEnerBinEdgeForSafety*PhotEnerStep;
const G4int CkvProdNumPhotWaveLengthBins=
		NumPhotWaveLengthBins -2* PhotEnerBinEdgeForSafety;

const G4int NumPhotonRichMirrorReflWaveLengthBins = 26;

// Defintion of STP pressure and temp

//static const G4double Pressure_STP=1.013* CLHEP::bar;
//static const G4double Temperature_STP=273.* CLHEP::kelvin
const G4double GasPressure_STP = CLHEP::STP_Pressure;
const G4double GasTemperature_STP = CLHEP::STP_Temperature;
// sellmeir coef  for nitrogen
// Ref Index of nitrogen using sellmeir parametrization
const G4double SellN2E1=13.414;
const G4double SellN2E2=23.215;
const G4double SellN2F1=921.28;
const G4double SellN2F2=3569.60;
const G4double GasMolWeightN2=28.02;      //unit is grams
const G4double GasRhoN2atSTP=0.00125053;  //unit is gramPercm3

// Ref Index of c4f10 using sellmeir parametrization
const G4double SellC4F10E1=18.938;
const G4double SellC4F10E2=50.0;
const G4double SellC4F10F1=12305.3;
const G4double SellC4F10F2=0.0;
const G4double GasMolWeightC4F10=138.0;      //unit is grams
const G4double GasRhoC4F10atSTP=0.00964;  //unit is gramPercm3

// Now for HPD

// CHANGED JDICKENS (25/07/05) FOR TESTING

const G4double PixelPMTPSFSigma = 50.0 * CLHEP::micrometer; // default
//const G4double PixelPMTPSFSigma = 0.0 * CLHEP::micrometer;

// END OF CHANGE

//static const G4int NumDemagnificationParam=4;
// The following change in March 2004.
//static const G4int NumDemagnificationParam=5;
//static const G4int NumDemagnificationParam=2;

const G4double PixelPMTDemagConstShift=0.04323 * CLHEP::mm;

// The following shifts for constant term  made in March 2004. SE
const G4double PixelPMTDemagNominalConstShiftX[]={0.0 * CLHEP::mm,0.0 * CLHEP::mm,0.0 * CLHEP::mm,0.0 * CLHEP::mm,0.0 * CLHEP::mm,0.0 * CLHEP::mm};
const G4double PixelPMTDemagNominalConstShiftY[]={0.0 * CLHEP::mm,0.0 * CLHEP::mm,0.0 * CLHEP::mm,0.0 * CLHEP::mm,0.0 * CLHEP::mm,0.0 * CLHEP::mm};

// CHANGED JDICKENS 20/06/05
//const G4double PixelPMTDemagLinearFactor=-0.2018; // *default*
//const G4double PixelPMTDemagLinearFactor=-0.1994; // Thierry Data
const G4double PixelPMTDemagLinearFactor = -0.1772; // make rings match

//const G4double PixelPMTDemagQuadraticFactor=0.000741*(1.0/(CLHEP::mm)); // *default*
//const G4double PixelPMTDemagQuadraticFactor=0.0007*(1.0/(CLHEP::mm)); // Thierry Data
const G4double PixelPMTDemagQuadraticFactor=0.0*(1.0/(CLHEP::mm)); // make rings match
// END OF CHANGE

const G4double PixelPMTDemagErrorLinearFactor=0.0;

//static const G4int PmtQENumBins= 18; //SILICON TEST
static const G4int PmtQENumBins= 60;
//static const G4int PMTQENumBins= 31;

const G4double PMTQEReductionFactor=1.0;
const G4double PmtQEWaveLenUnits= 1.0 * CLHEP::nanometer;
// since the quartz window of hpd cuts off at 200 nm.
// now use the QE values measured in June 2004.  SE Sept 6,2004.
// PMT labels  L0= 0, L1=1, C0=2, C1=3, R0=4, R1=5
// nominal values for PMT QE in 2014 testbeam


const G4double PmtQEWaveLen[] =
{ 180,190,200,210, 220,230,240,250,260,270, 280, 290,
        300,310, 320,330,340,350,360,370, 380, 390,
        400,410, 420,430,440,450,460,470, 480, 490,
        500,510, 520,530,540,550,560,570, 580, 590,
        600,610, 620,630,640,650,660,670, 680, 690,
        700,710, 720,730,740,750,760,770 };


//for testing of silicon pmts
//const G4double PmtQEWaveLen[] =
//	{200,208,220,243,255,273,293,315,344,373,410,460,500,
//		555,623,685,760,800,831,860,881,910,931,950,968,990};
//const G4double PmtQEWaveLen[] =
//    {321,335,352,374,400,421,448,476,510,549,592,625,
//     673,715,766,821,854,899};
//const G4double PmtSiliconQEPerCent1[] =
//	{1.6,10,21,27,34,44,57,65,72,76,79,80.6,81.3,80.3,80,79.2,
//		78.3,77.5,73,66.3,59,47.5,37,29.5,21.7,13.7
//};
//const G4double PmtSiliconQEPerCent2[] =
//    {4.1,12.6,24.5,34.5,41.8,45.0,47.1,47.5,44.5,39.3,33.4,
//     28.0,22.7,17.9,13.2,8.0,6.8,5.0
//};

const G4double LHCbTypePmtQE[] = //MaPMT
{0.0,0.0,0.119,0.119,0.169,0.169,0.207,0.207,0.244,0.244,0.259,0.259,
        0.333,0.333,0.378,0.378,0.399,0.399,0.402,0.402,0.382,0.382,
        0.365,0.365,0.345,0.345,0.310,0.310,0.275,0.275,0.239,0.239,
        0.220,0.220,0.161,0.161,0.118,0.118,0.100,0.100,0.083,0.083,
        0.071,0.071,0.057,0.057,0.037,0.037,0.023,0.023,0.012,0.012,
        0.006,0.0,0.0,0.0,0.0,0.0,0.0,0.0
};


//const G4double PmtQEPerCent[] =
//{0,0,0,0.5,1,1.5,10,13,16.5,20,23.6,27.2,
// 31,32,33,34,35,35,35,34.5,34,33.5,
// 33,32.5,32,31.2,30,28,25.9,23.8,21.7,19.6,
// 17.5,13.6,10.8,8.3,7,6.1,5.2,4.5,3.7,3,
// 2.29,1.71,1.21,0.77,0.49,0.3,0.18,0.1,0.06,0.03,
// 0.0181,0.01,0.0056,0.0028,0.0014,0.0007,0,0
//};
//BS entrance window


//QE for the 2017 configuration
//                    //PMTref      // Real convention // simulated convention
const G4double EC3PMT1QE_2017[] = //MaPMT FA0134 // EC3 PMT1
{0.0,0.0,0.119,0.119,0.169,0.169,0.207,0.207,0.244,0.244,0.259,0.259,
        0.333,0.333,0.378,0.378,0.399,0.399,0.402,0.402,0.382,0.382,
        0.365,0.365,0.345,0.345,0.310,0.310,0.275,0.275,0.239,0.239,
        0.220,0.220,0.161,0.161,0.118,0.118,0.100,0.100,0.083,0.083,
        0.071,0.071,0.057,0.057,0.037,0.037,0.023,0.023,0.012,0.012,
        0.006,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC1PMT0QE_2017[] = //MaPMT FA0216 // EC1 PMT0
{0.0,0.0,0.0,0.0,0.102,0.102,0.208,0.208,0.271,0.271,0.303,0.303,
        0.391,0.391,0.471,0.471,0.492,0.492,0.494,0.494,0.484,0.484,
        0.466,0.466,0.451,0.451,0.418,0.418,0.358,0.358,0.318,0.318,
        0.245,0.245,0.160,0.160,0.126,0.126,0.093,0.093,0.077,0.077,
        0.065,0.065,0.044,0.044,0.020,0.020,0.005,0.005,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC3PMT3QE_2017[] = //MaPMT FA0285 // EC3 PMT3
{0.0,0.0,0.0,0.0,0.102,0.102,0.208,0.208,0.271,0.271,0.303,0.303,
        0.391,0.391,0.471,0.471,0.492,0.492,0.494,0.494,0.484,0.484,
        0.466,0.466,0.451,0.451,0.408,0.408,0.359,0.359,0.318,0.318,
        0.245,0.245,0.160,0.160,0.126,0.126,0.093,0.093,0.093,0.093,
        0.065,0.065,0.044,0.044,0.020,0.020,0.005,0.005,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC0PMT0QE_2017[] = //MaPMT FA0302 // EC0 PMT0
{0.0,0.0,0.114,0.114,0.191,0.191,0.250,0.250,0.286,0.286,0.293,0.293,
        0.360,0.360,0.398,0.398,0.413,0.413,0.410,0.410,0.383,0.383,
        0.365,0.365,0.356,0.356,0.307,0.307,0.270,0.270,0.234,0.234,
        0.206,0.206,0.139,0.139,0.101,0.101,0.080,0.080,0.062,0.062,
        0.48,0.48,0.034,0.034,0.017,0.017,0.007,0.007,0.002,0.002,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC1PMT3QE_2017[] = //MaPMT FA0327 // EC1 PMT3
{0.0,0.0,0.092,0.092,0.161,0.161,0.216,0.216,0.254,0.254,0.236,0.236,
        0.334,0.334,0.374,0.374,0.393,0.393,0.394,0.394,0.373,0.373,
        0.357,0.357,0.340,0.340,0.300,0.300,0.264,0.264,0.226,0.226,
        0.162,0.162,0.112,0.112,0.084,0.084,0.059,0.059,0.041,0.041,
        0.027,0.027,0.014,0.014,0.004,0.004,0.0,0.0,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC2PMT0QE_2017[] = //MaPMT FA0347 // EC2 PMT1
{0.0,0.0,0.031,0.031,0.122,0.122,0.190,0.190,0.215,0.215,0.228,0.228,
        0.266,0.266,0.305,0.305,0.305,0.305,0.304,0.304,0.284,0.284,
        0.269,0.269,0.257,0.257,0.232,0.232,0.211,0.211,0.186,0.186,
        0.158,0.158,0.107,0.107,0.082,0.082,0.060,0.060,0.051,0.051,
        0.041,0.041,0.029,0.029,0.013,0.013,0.004,0.004,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC2PMT3QE_2017[] = //MaPMT FA0544 // EC2 PMT3
{0.0,0.0,0.092,0.092,0.161,0.161,0.216,0.216,0.254,0.254,0.269,0.269,
        0.334,0.334,0.374,0.374,0.393,0.393,0.394,0.394,0.373,0.373,
        0.357,0.357,0.340,0.340,0.300,0.300,0.264,0.264,0.226,0.226,
        0.162,0.162,0.112,0.112,0.084,0.084,0.025,0.025,0.041,0.041,
        0.027,0.027,0.014,0.014,0.004,0.004,0.0,0.0,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC2PMT2QE_2017[] = //MaPMT FA0590 // EC2 PMT2
{0.0,0.0,0.108,0.108,0.186,0.186,0.244,0.244,0.281,0.281,0.296,0.296,
        0.361,0.361,0.412,0.412,0.423,0.423,0.403,0.403,0.382,0.382,
        0.377,0.377,0.340,0.340,0.297,0.297,0.264,0.264,0.210,0.210,
        0.142,0.142,0.110,0.110,0.085,0.085,0.065,0.065,0.049,0.049,
        0.031,0.031,0.015,0.015,0.005,0.005,0.001,0.001,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC0PMT1QE_2017[] = //MaPMT FA0610 // EC0 PMT1
{0.0,0.0,0.092,0.092,0.161,0.161,0.216,0.216,0.251,0.251,0.269,0.269,
        0.334,0.334,0.374,0.374,0.393,0.393,0.394,0.394,0.374,0.374,
        0.357,0.357,0.340,0.340,0.299,0.299,0.264,0.264,0.226,0.226,
        0.162,0.162,0.112,0.112,0.084,0.084,0.059,0.059,0.041,0.041,
        0.027,0.027,0.014,0.014,0.004,0.004,0.0,0.0,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC0PMT2QE_2017[] = //MaPMT FA0666 // EC0 PMT2 //PMT0
{0.0,0.0,0.092,0.092,0.161,0.161,0.216,0.216,0.254,0.254,0.269,0.269,
        0.334,0.334,0.374,0.374,0.393,0.393,0.394,0.394,0.373,0.373,
        0.357,0.357,0.340,0.340,0.299,0.299,0.264,0.264,0.226,0.226,
        0.161,0.161,0.112,0.112,0.084,0.084,0.059,0.059,0.041,0.041,
        0.027,0.027,0.014,0.014,0.004,0.004,0.0,0.0,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC1PMT2QE_2017[] = //MaPMT FA0679 // EC1 PMT2
{0.0,0.0,0.092,0.092,0.161,0.161,0.216,0.216,0.254,0.254,0.269,0.269,
        0.334,0.334,0.374,0.374,0.393,0.393,0.373,0.373,0.357,0.357,
        0.340,0.340,0.299,0.299,0.264,0.264,0.226,0.226,0.161,0.161,
        0.112,0.112,0.084,0.084,0.059,0.059,0.041,0.041,0.027,0.027,
        0.014,0.014,0.004,0.004,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC1PMT1QE_2017[] = //MaPMT FA0787 // EC1 PMT1
{0.0,0.0,0.108,0.108,0.186,0.186,0.244,0.244,0.281,0.281,0.296,0.296,
        0.361,0.361,0.412,0.412,0.417,0.417,0.414,0.414,0.403,0.403,
        0.382,0.382,0.376,0.376,0.340,0.340,0.297,0.297,0.264,0.264,
        0.264,0.264,0.142,0.142,0.110,0.110,0.075,0.075,0.064,0.064,
        0.049,0.049,0.032,0.032,0.015,0.015,0.005,0.005,0.001,0.001,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC3PMT0QE_2017[] = //MaPMT FA0789 // EC3 PMT0
{0.0,0.0,0.184,0.184,0.245,0.245,0.284,0.284,0.313,0.313,0.317,0.317,
        0.387,0.387,0.426,0.426,0.444,0.444,0.444,0.444,0.418,0.418,
        0.401,0.401,0.394,0.394,0.344,0.344,0.303,0.303,0.268,0.268,
        0.239,0.239,0.167,0.167,0.125,0.125,0.105,0.105,0.081,0.081,
        0.066,0.066,0.048,0.048,0.028,0.028,0.016,0.016,0.009,0.009,0.005,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC2PMT1QE_2017[] = //MaPMT FA1129 // EC2 PMT1
{0.0,0.0,0.092,0.092,0.161,0.161,0.212,0.212,0.251,0.251,0.262,0.262,
        0.324,0.324,0.361,0.361,0.378,0.378,0.377,0.377,0.354,0.354,
        0.339,0.339,0.323,0.323,0.288,0.288,0.254,0.254,0.220,0.220,
        0.183,0.183,0.118,0.118,0.082,0.082,0.059,0.059,0.040,0.040,
        0.026,0.026,0.014,0.014,0.005,0.005,0.002,0.002,0.001,0.001,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC3PMT2QE_2017[] = //MaPMT FA1212 // EC3 PMT2
{0.0,0.0,0.114,0.114,0.191,0.191,0.250,0.250,0.286,0.286,0.293,0.293,
        0.360,0.360,0.398,0.398,0.413,0.413,0.410,0.410,0.386,0.386,
        0.365,0.365,0.346,0.346,0.307,0.307,0.270,0.270,0.234,0.234,
        0.206,0.206,0.139,0.139,0.101,0.101,0.080,0.080,0.061,0.061,
        0.048,0.048,0.034,0.034,0.017,0.017,0.007,0.007,0.002,0.002,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC0PMT3QE_2017[] = //MaPMT FA1265 // EC0 PMT3
{0.0,0.0,0.092,0.092,0.161,0.161,0.216,0.216,0.254,0.254,0.269,0.269,
        0.334,0.334,0.374,0.374,0.393,0.393,0.394,0.394,0.373,0.373,
        0.357,0.357,0.340,0.340,0.299,0.299,0.226,0.226,0.162,0.162,
        0.112,0.112,0.084,0.084,0.059,0.059,0.041,0.041,0.027,0.027,
        0.014,0.014,0.004,0.004,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};


/*
const G4double EC3PMT1QE_2017[] = //MaPMT FA0134 // EC3 PMT1
{0.0,0.0,0.119,0.119,0.169,0.169,0.207,0.207,0.244,0.244,0.259,0.259,
        0.333,0.333,0.378,0.378,0.399,0.399,0.402,0.402,0.382,0.382,
        0.365,0.365,0.345,0.345,0.310,0.310,0.275,0.275,0.239,0.239,
        0.220,0.220,0.161,0.161,0.118,0.118,0.100,0.100,0.083,0.083,
        0.071,0.071,0.057,0.057,0.037,0.037,0.023,0.023,0.012,0.012,
        0.006,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC1PMT0QE_2017[] = //MaPMT FA0216 // EC1 PMT0
{0.0,0.0,0.0,0.0,0.102,0.102,0.208,0.208,0.271,0.271,0.303,0.303,
        0.391,0.391,0.471,0.471,0.492,0.492,0.494,0.494,0.484,0.484,
        0.466,0.466,0.451,0.451,0.418,0.418,0.358,0.358,0.318,0.318,
        0.245,0.245,0.160,0.160,0.126,0.126,0.093,0.093,0.077,0.077,
        0.065,0.065,0.044,0.044,0.020,0.020,0.005,0.005,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC0PMT3QE_2017[] = //MaPMT FA0285 // EC0 PMT3
{0.0,0.0,0.0,0.0,0.102,0.102,0.208,0.208,0.271,0.271,0.303,0.303,
        0.391,0.391,0.471,0.471,0.492,0.492,0.494,0.494,0.484,0.484,
        0.466,0.466,0.451,0.451,0.408,0.408,0.359,0.359,0.318,0.318,
        0.245,0.245,0.160,0.160,0.126,0.126,0.093,0.093,0.093,0.093,
        0.065,0.065,0.044,0.044,0.020,0.020,0.005,0.005,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC0PMT0QE_2017[] = //MaPMT FA0302 // EC0 PMT0
{0.0,0.0,0.114,0.114,0.191,0.191,0.250,0.250,0.286,0.286,0.293,0.293,
        0.360,0.360,0.398,0.398,0.413,0.413,0.410,0.410,0.383,0.383,
        0.365,0.365,0.356,0.356,0.307,0.307,0.270,0.270,0.234,0.234,
        0.206,0.206,0.139,0.139,0.101,0.101,0.080,0.080,0.062,0.062,
        0.48,0.48,0.034,0.034,0.017,0.017,0.007,0.007,0.002,0.002,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC2PMT3QE_2017[] = //MaPMT FA0327 // EC2 PMT3
{0.0,0.0,0.092,0.092,0.161,0.161,0.216,0.216,0.254,0.254,0.236,0.236,
        0.334,0.334,0.374,0.374,0.393,0.393,0.394,0.394,0.373,0.373,
        0.357,0.357,0.340,0.340,0.300,0.300,0.264,0.264,0.226,0.226,
        0.162,0.162,0.112,0.112,0.084,0.084,0.059,0.059,0.041,0.041,
        0.027,0.027,0.014,0.014,0.004,0.004,0.0,0.0,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC2PMT0QE_2017[] = //MaPMT FA0347 // EC2 PMT1
{0.0,0.0,0.031,0.031,0.122,0.122,0.190,0.190,0.215,0.215,0.228,0.228,
        0.266,0.266,0.305,0.305,0.305,0.305,0.304,0.304,0.284,0.284,
        0.269,0.269,0.257,0.257,0.232,0.232,0.211,0.211,0.186,0.186,
        0.158,0.158,0.107,0.107,0.082,0.082,0.060,0.060,0.051,0.051,
        0.041,0.041,0.029,0.029,0.013,0.013,0.004,0.004,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC1PMT3QE_2017[] = //MaPMT FA0544 // EC1 PMT3
{0.0,0.0,0.092,0.092,0.161,0.161,0.216,0.216,0.254,0.254,0.269,0.269,
        0.334,0.334,0.374,0.374,0.393,0.393,0.394,0.394,0.373,0.373,
        0.357,0.357,0.340,0.340,0.300,0.300,0.264,0.264,0.226,0.226,
        0.162,0.162,0.112,0.112,0.084,0.084,0.025,0.025,0.041,0.041,
        0.027,0.027,0.014,0.014,0.004,0.004,0.0,0.0,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC1PMT2QE_2017[] = //MaPMT FA0590 // EC1 PMT2
{0.0,0.0,0.108,0.108,0.186,0.186,0.244,0.244,0.281,0.281,0.296,0.296,
        0.361,0.361,0.412,0.412,0.423,0.423,0.403,0.403,0.382,0.382,
        0.377,0.377,0.340,0.340,0.297,0.297,0.264,0.264,0.210,0.210,
        0.142,0.142,0.110,0.110,0.085,0.085,0.065,0.065,0.049,0.049,
        0.031,0.031,0.015,0.015,0.005,0.005,0.001,0.001,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC0PMT1QE_2017[] = //MaPMT FA0610 // EC0 PMT1
{0.0,0.0,0.092,0.092,0.161,0.161,0.216,0.216,0.251,0.251,0.269,0.269,
        0.334,0.334,0.374,0.374,0.393,0.393,0.394,0.394,0.374,0.374,
        0.357,0.357,0.340,0.340,0.299,0.299,0.264,0.264,0.226,0.226,
        0.162,0.162,0.112,0.112,0.084,0.084,0.059,0.059,0.041,0.041,
        0.027,0.027,0.014,0.014,0.004,0.004,0.0,0.0,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC3PMT2QE_2017[] = //MaPMT FA0666 // EC3 PMT2 //PMT0
{0.0,0.0,0.092,0.092,0.161,0.161,0.216,0.216,0.254,0.254,0.269,0.269,
        0.334,0.334,0.374,0.374,0.393,0.393,0.394,0.394,0.373,0.373,
        0.357,0.357,0.340,0.340,0.299,0.299,0.264,0.264,0.226,0.226,
        0.161,0.161,0.112,0.112,0.084,0.084,0.059,0.059,0.041,0.041,
        0.027,0.027,0.014,0.014,0.004,0.004,0.0,0.0,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC2PMT2QE_2017[] = //MaPMT FA0679 // EC2 PMT2
{0.0,0.0,0.092,0.092,0.161,0.161,0.216,0.216,0.254,0.254,0.269,0.269,
        0.334,0.334,0.374,0.374,0.393,0.393,0.373,0.373,0.357,0.357,
        0.340,0.340,0.299,0.299,0.264,0.264,0.226,0.226,0.161,0.161,
        0.112,0.112,0.084,0.084,0.059,0.059,0.041,0.041,0.027,0.027,
        0.014,0.014,0.004,0.004,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC1PMT1QE_2017[] = //MaPMT FA0787 // EC1 PMT1
{0.0,0.0,0.108,0.108,0.186,0.186,0.244,0.244,0.281,0.281,0.296,0.296,
        0.361,0.361,0.412,0.412,0.417,0.417,0.414,0.414,0.403,0.403,
        0.382,0.382,0.376,0.376,0.340,0.340,0.297,0.297,0.264,0.264,
        0.264,0.264,0.142,0.142,0.110,0.110,0.075,0.075,0.064,0.064,
        0.049,0.049,0.032,0.032,0.015,0.015,0.005,0.005,0.001,0.001,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC3PMT0QE_2017[] = //MaPMT FA0789 // EC3 PMT0
{0.0,0.0,0.184,0.184,0.245,0.245,0.284,0.284,0.313,0.313,0.317,0.317,
        0.387,0.387,0.426,0.426,0.444,0.444,0.444,0.444,0.418,0.418,
        0.401,0.401,0.394,0.394,0.344,0.344,0.303,0.303,0.268,0.268,
        0.239,0.239,0.167,0.167,0.125,0.125,0.105,0.105,0.081,0.081,
        0.066,0.066,0.048,0.048,0.028,0.028,0.016,0.016,0.009,0.009,0.005,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC2PMT1QE_2017[] = //MaPMT FA1129 // EC2 PMT1
{0.0,0.0,0.092,0.092,0.161,0.161,0.212,0.212,0.251,0.251,0.262,0.262,
        0.324,0.324,0.361,0.361,0.378,0.378,0.377,0.377,0.354,0.354,
        0.339,0.339,0.323,0.323,0.288,0.288,0.254,0.254,0.220,0.220,
        0.183,0.183,0.118,0.118,0.082,0.082,0.059,0.059,0.040,0.040,
        0.026,0.026,0.014,0.014,0.005,0.005,0.002,0.002,0.001,0.001,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC0PMT2QE_2017[] = //MaPMT FA1212 // EC0 PMT2
{0.0,0.0,0.114,0.114,0.191,0.191,0.250,0.250,0.286,0.286,0.293,0.293,
        0.360,0.360,0.398,0.398,0.413,0.413,0.410,0.410,0.386,0.386,
        0.365,0.365,0.346,0.346,0.307,0.307,0.270,0.270,0.234,0.234,
        0.206,0.206,0.139,0.139,0.101,0.101,0.080,0.080,0.061,0.061,
        0.048,0.048,0.034,0.034,0.017,0.017,0.007,0.007,0.002,0.002,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
const G4double EC3PMT3QE_2017[] = //MaPMT FA1265 // EC0 PMT3
{0.0,0.0,0.092,0.092,0.161,0.161,0.216,0.216,0.254,0.254,0.269,0.269,
        0.334,0.334,0.374,0.374,0.393,0.393,0.394,0.394,0.373,0.373,
        0.357,0.357,0.340,0.340,0.299,0.299,0.226,0.226,0.162,0.162,
        0.112,0.112,0.084,0.084,0.059,0.059,0.041,0.041,0.027,0.027,
        0.014,0.014,0.004,0.004,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
        0.0,0.0,0.0,0.0,0.0,0.0,0.0
};
*/

//QE for older configuration


const G4double Pmt2QEPerCent[] =
{0,0,0,0,0,0,0,6.3,13.7,19.8,24.3,28.3,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double PmtQEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
//UV entrance window
const G4double Pmt0QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
const G4double Pmt1QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt3QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt4QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};


const G4double Pmt5QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
const G4double Pmt6QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt7QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt8QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
const G4double Pmt9QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt10QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt11QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt12QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt13QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt14QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt15QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt16QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt17QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
const G4double Pmt18QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
const G4double Pmt19QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
const G4double Pmt20QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
const G4double Pmt21QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
const G4double Pmt22QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
const G4double Pmt23QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
const G4double Pmt24QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
const G4double Pmt25QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
const G4double Pmt26QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt27QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};
const G4double Pmt28QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt29QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};


const G4double Pmt30QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt31QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};

const G4double Pmt32QEPerCent[] =
{0,0,11.5,13.2,15.2,17.0,19.3,21.3,23.1,24.7,27.2,29.4,
		31.2,33.2,34.3,35.0,35.1,35.2,35.0,34.6,34.4,34.4,
		33.6,32.8,31.8,31.0,29.5,28.2,26.6,24.4,22.6,20.9,
		19.6,18.3,16.5,13.4,10.4,8.3,7.0,5.9,4.9,4.1,
		3.3,2.5,1.8,1.3,0.9,0.5,0.3,0.2,0.1,0.1,
		0.0,0.0,0.0,0.0,0.0,0.0,0,0
};



//std::vector<G4double> Pmt0QEPerCent= PmtQEPerCent;
//std::vector<G4double> Pmt1QEPerCent= PmtQEPerCent;
//std::vector<G4double> Pmt2QEPerCent= PmtQEPerCent;
//std::vector<G4double> Pmt3QEPerCent= PmtQEPerCent;
//std::vector<G4double> Pmt4QEPerCent= PmtQEPerCent;
//std::vector<G4double> Pmt5QEPerCent= PmtQEPerCent;
//std::vector<G4double> Pmt6QEPerCent= PmtQEPerCent;
//std::vector<G4double> Pmt7QEPerCent= PmtQEPerCent;





//const G4double PMTQEWaveLen[]=
//  {200.0, 240.0, 270.0, 300.0, 320.0, 360.0, 400.0, 440.0, 480.0,
//   520.0, 560.0, 600.0, 640.0, 700.0, 750.0, 800.0, 830.0,
//   850.0, 880.0, 900.0
//  };


//const G4double PMT0QEPerCent[]=
//  {10.21, 20.44, 23.04, 19.87, 17.61, 17.31, 19.80, 18.47,
//   14.89, 12.62, 10.45, 8.38, 6.83, 4.93, 3.11,1.62,0.98,0.68,0.22,0.05
//  };
//const G4double PMT1QEPerCent[]=
//  { 8.95, 19.44, 22.38, 19.46, 17.74, 17.24, 18.46, 15.78, 12.11,
//    9.59, 7.23, 5.10, 3.57, 1.57, 0.37, 0.02, 0.01, 0.0, 0.0, 0.0
//  };
//const G4double PMT2QEPerCent[]=
//  {8.70, 24.17, 27.90, 24.63,22.19,21.67,23.29,19.39,15.69,12.37,
//   9.27,6.25,4.05,1.17,0.12,0.0,0.0,0.0,0.0,0.0
//  };

//static const G4int PMTQuartzRefIndNumBins=29;
// extra two bins added, one at each edge,
//  to cover the wavelength
// range of other materals.
static const G4int PMTQuartzRefIndNumBins=31;
//static const G4int CrystalMatRefIndNumBins=51;
static const G4int CrystalMatRefIndNumBins=52;
const G4int  QuartzMatRefIndNumBins =52;
const G4int  QuartzMatProdRefIndNumBins=12;


const G4double PMTQuartzRefWaveLenUnits= 1.0 * CLHEP::nanometer;
const G4double CrystalMatRefWaveLenUnits= 1.0 * CLHEP::nanometer;

const G4double PMTQuartzRefWaveLenValues[]=
{150.0, 185.41, 193.53, 202.54, 206.20, 214.45, 226.50, 232.94,
		250.20, 253.70, 257.62, 274.87, 298.06, 328.36, 340.36,346.69,
		361.17, 398.84, 435.83, 486.13, 546.07, 587.56, 589.00, 589.60,
		656.27, 670.00, 680.00, 690.00, 700.00, 800.00,1200.0
};
const G4double PMTQuartzRefIndexValues[]=
{1.57464,1.57464, 1.56071, 1.54729, 1.54269, 1.53385, 1.52318,
		1.51834, 1.50762, 1.50590, 1.50397, 1.49634, 1.48859,
		1.48183, 1.47877, 1.47766, 1.47520, 1.47028, 1.46679,
		1.46324, 1.46021, 1.45857, 1.45853, 1.45851, 1.45646,
		1.456066, 1.455818, 1.455579, 1.455347, 1.453371,1.453371
};

//const G4double CrystalMatRefWaveLenValues[]=
//  {300,344,388,432,476,520,564,608,652,696,
//   740,784,828,872,916,960,1004,1048,1092,1136,
//   1180,1224,1268,1312,1356,1400,1444,1488,1532,1576,
//   1620,1664,1708,1752,1796,1840,1884,1928,1972,2016,
//   2060,2104,2148,2192,2236,2280,2324,2368,2412,2456,
//   2500
//  };
//const G4double CrystalMatRefIndexValues[]=
//  {1.5527702635739,1.5404466868331,1.5325277321700,1.5270784291406,1.5231331738499,
//   1.5201596882463,1.5178426478869,1.5159846691816,1.5144566604975,1.5131711117948,
//   1.5120668948646,1.5111002059336,1.5102389559626,1.5094591800239,1.5087426727363,
//   1.5080753919142,1.5074463569456,1.5068468735887,1.5062699788386,1.5057100370628,
//   1.5051624419507,1.5046233936610,1.5040897301904,1.5035587983604,1.5030283541053,
//   1.5024964846769,1.5019615474168,1.5014221211688,1.5008769674285,1.5003249990526,
//   1.4997652548858,1.4991968790539,1.4986191039608,1.4980312362468,1.4974326451267,
//   1.4968227526526,1.4962010255422,1.4955669682860,1.4949201173049,1.4942600359742,
//   1.4935863103651,1.4928985455839,1.4921963626087,1.4914793955446,1.4907472892292,
//   1.4899996971337,1.4892362795147,1.4884567017771,1.4876606330169,1.4868477447166,
//   1.4860177095710
//
//  };

const G4double CrystalMatRefWaveLenValues[]=
{200,300,344,388,432,476,520,564,608,652,696,
		740,784,828,872,916,960,1004,1048,1092,1136,
		1180,1224,1268,1312,1356,1400,1444,1488,1532,1576,
		1620,1664,1708,1752,1796,1840,1884,1928,1972,2016,
		2060,2104,2148,2192,2236,2280,2324,2368,2412,2456,
		2500
};
const G4double CrystalMatRefIndexValues[]= { 1.5727702635739,
		1.5527702635739,1.5404466868331,1.5325277321700,1.5270784291406,1.5231331738499,
		1.5201596882463,1.5178426478869,1.5159846691816,1.5144566604975,1.5131711117948,
		1.5120668948646,1.5111002059336,1.5102389559626,1.5094591800239,1.5087426727363,
		1.5080753919142,1.5074463569456,1.5068468735887,1.5062699788386,1.5057100370628,
		1.5051624419507,1.5046233936610,1.5040897301904,1.5035587983604,1.5030283541053,
		1.5024964846769,1.5019615474168,1.5014221211688,1.5008769674285,1.5003249990526,
		1.4997652548858,1.4991968790539,1.4986191039608,1.4980312362468,1.4974326451267,
		1.4968227526526,1.4962010255422,1.4955669682860,1.4949201173049,1.4942600359742,
		1.4935863103651,1.4928985455839,1.4921963626087,1.4914793955446,1.4907472892292,
		1.4899996971337,1.4892362795147,1.4884567017771,1.4876606330169,1.4868477447166,
		1.4860177095710

};

//const G4double CrystalMatRefIndexValues[]=
//{
//};



const G4double CrystalMatAbsorptionValues[]=
{0.0,0.0,55.0,282.5,439.9,555.3,644.7,706.3,616.9,558.9,546.4,
		505.9,447.4,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,
		1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,
		1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,
		1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,
		1.E32};

//const G4double CrystalMatAbsorptionValues[]=
//{0,10,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,
// 1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,
// 1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,
// 1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,
// 1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,
// 1.E32};




// Now for the quartz radiator parameters

const G4double QuartzMatRefWaveLenUnits = 1.0 * CLHEP::nanometer;

const G4double QuartzMatRefWaveLenValues []=
{200,300,344,388,432,476,520,564,608,652,696,
		740,784,828,872,916,960,1004,1048,1092,1136,
		1180,1224,1268,1312,1356,1400,1444,1488,1532,1576,
		1620,1664,1708,1752,1796,1840,1884,1928,1972,2016,
		2060,2104,2148,2192,2236,2280,2324,2368,2412,2456,
		2500
};

const G4double QuartzRadiatorMatRefIndexValues []= { 1.5727702635739,
		1.5527702635739,1.5404466868331,1.5325277321700,1.5270784291406,1.5231331738499,
		1.5201596882463,1.5178426478869,1.5159846691816,1.5144566604975,1.5131711117948,
		1.5120668948646,1.5111002059336,1.5102389559626,1.5094591800239,1.5087426727363,
		1.5080753919142,1.5074463569456,1.5068468735887,1.5062699788386,1.5057100370628,
		1.5051624419507,1.5046233936610,1.5040897301904,1.5035587983604,1.5030283541053,
		1.5024964846769,1.5019615474168,1.5014221211688,1.5008769674285,1.5003249990526,
		1.4997652548858,1.4991968790539,1.4986191039608,1.4980312362468,1.4974326451267,
		1.4968227526526,1.4962010255422,1.4955669682860,1.4949201173049,1.4942600359742,
		1.4935863103651,1.4928985455839,1.4921963626087,1.4914793955446,1.4907472892292,
		1.4899996971337,1.4892362795147,1.4884567017771,1.4876606330169,1.4868477447166,
		1.4860177095710

};

const G4double QuartzRadiatorMatAbsorptionValues []=
{0.0,0.0,55.0,282.5,439.9,555.3,644.7,706.3,616.9,558.9,546.4,
		505.9,447.4,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,
		1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,
		1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,
		1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,1.E32,
		1.E32};

const G4double QuartzMatProdRefWaveLenValues []=
{200,300,344,388,432,476,520,564,608,652,696,740};
const G4double QuartzRadiatorProdMatRefIndexValues[] =
  {1.5727702635739,1.5527702635739,1.5404466868331,1.5325277321700,1.5270784291406,1.5231331738499,
   1.5201596882463,1.5178426478869,1.5159846691816,1.5144566604975,1.5131711117948,1.5120668948646
  };

  
    



// now for the ref index of the ph cathode derived from the following
// value measured by Naoko. The ref index is derived using the fresnel formula
// and the ref index of PMTquartz. The derivation is done in RichMaterial.cc.

const G4double PMTQwPhReflectionProb=0.02;
const G4double HPDQwPhReflectionProb=0.02;
// now for the transmission of light through the photocathode.
// The results of the measurement so far show the transmission in
// photocathode*reflection at silicon= 0.065 above 550nm and 0.025 below
// 550 nm. Until this is disentangled, the silicon is set to be 30% reflecting
// and the transmission in photocathode to be responsible for the rest of the 0.065 and 0.025
// values measured. In the following the 0.3 is for the Si surface reflectivity assumed so far.
const G4double PMTSiDetSurfaceReflectivity=0.3;

const G4double PMTPhCathodeTransRed=(0.065/PMTSiDetSurfaceReflectivity) ;
const G4double PMTPhCathodeTransBlue=(0.025/PMTSiDetSurfaceReflectivity);
const G4double PMTPhCathodeRedBlueBoundary=550.0* CLHEP::nanometer;

const G4double HPDPhCathodeTransRed=(0.065/PMTSiDetSurfaceReflectivity) ;
const G4double HPDPhCathodeTransBlue=(0.025/PMTSiDetSurfaceReflectivity);
const G4double HPDPhCathodeRedBlueBoundary=550.0*CLHEP::nanometer;

const G4double backscaprob = 0.18;
const G4double bckKillFactor=0.5;
// The following parameter can be overridden using
// the values in the options file. (SE November 2004).
// hence the following parameter is a default value only.
//const G4double PMTelectronicsDetAbsEff=0.9;
const G4double PMTelectronicsDetAbsEff=0.87;

const G4double HpdelectronicsDetAbsEff = 0.85;

// now for the nominal refractive index of Gas Quartz Window
const G4double GasQuartzWindowNominalRefIndex=1.40;

// now for the gas quartzWindow transmission measurements.

const G4int numGasQuTransBins= 38;
const G4double GasQuTransWlenValues [] =
{190.0, 200.0, 210.0, 220.0, 230.0, 240.0, 250.0, 260.0, 270.0, 280.0, 290.0, 300.0, 310.0,
		320.0, 340.0, 360.0, 380.0, 400.0, 420.0, 440.0, 460.0, 480.0, 500.0, 520.0, 540.0, 560.0,
		580.0, 600.0, 620.0, 640.0, 660.0, 680.0, 700.0, 720.0, 740.0, 760.0, 780.0, 800.0};

const G4double GasQuTransmissionValues [] =
{0.842326088, 0.846021534, 0.873896705, 0.899239713, 0.904766085, 0.892395354, 0.905442944,
		0.916895386, 0.924896759, 0.926322055, 0.926729364, 0.92546999, 0.924850007, 0.931886665,
		0.936234369, 0.939103324, 0.936502177, 0.936451404, 0.933651249, 0.936923238, 0.937613364,
		0.93764767, 0.937041811, 0.941847013, 0.940911554, 0.942555595, 0.943165589, 0.943507436,
		0.943549418, 0.94442271, 0.944210076, 0.944153405, 0.946732578, 0.947069746, 0.945611816,
		0.943229139, 0.947273101, 0.949254646};



// now for HPD

const G4double PixelHpdPSFSigma = 50.0 * CLHEP::micrometer; // default
static const G4int NumDemagnificationParam=2;
//const G4double PixelHpdDemagLinearFactor = -0.1772; // make rings match
const G4double PixelHpdDemagLinearFactor = -0.23; // make rings match
const G4double PixelHpdDemagQuadraticFactor=0.0*(1.0/(CLHEP::mm)); // make rings match
static const G4int HpdQENumBins= 20;
const G4double HpdQEReductionFactor=1.0;
const G4double HpdQEWaveLenUnits= 1.0 * CLHEP::nanometer;
const G4double HpdQEWaveLen[]=
{200.0, 240.0, 270.0, 300.0, 320.0, 360.0, 400.0, 440.0, 480.0, 520.0,
		560.0, 600.0, 640.0, 700.0, 750.0, 800.0, 830.0, 850.0, 880.0, 900.0};
const G4double Hpd0QEPerCent[]=
{19.0, 28.02, 31.3, 27.3, 24.7, 24.2, 24.0, 20.8, 17.5, 13.4,
		10.0, 7.3, 4.6,  1.3,  0.1,  0.0,  0.0,  0.0,  0.0, 0.0  };

static const G4int HPDQuartzRefIndNumBins=31;
const G4double HPDQuartzRefWaveLenUnits= 1.0 * CLHEP::nanometer;

const G4double HPDQuartzRefWaveLenValues[]=
{150.0, 185.41, 193.53, 202.54, 206.20, 214.45, 226.50, 232.94,
		250.20, 253.70, 257.62, 274.87, 298.06, 328.36, 340.36,346.69,
		361.17, 398.84, 435.83, 486.13, 546.07, 587.56, 589.00, 589.60,
		656.27, 670.00, 680.00, 690.00, 700.00, 800.00,1200.0
};
const G4double HPDQuartzRefIndexValues[]=
{1.57464,1.57464, 1.56071, 1.54729, 1.54269, 1.53385, 1.52318,
		1.51834, 1.50762, 1.50590, 1.50397, 1.49634, 1.48859,
		1.48183, 1.47877, 1.47766, 1.47520, 1.47028, 1.46679,
		1.46324, 1.46021, 1.45857, 1.45853, 1.45851, 1.45646,
		1.456066, 1.455818, 1.455579, 1.455347, 1.453371,1.453371
};


//#include "RichTbMiscNames.hh"



#endif                          /*RichTbMaterialParameters_h */
